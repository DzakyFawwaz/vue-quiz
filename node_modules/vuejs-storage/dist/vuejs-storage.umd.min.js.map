{"version":3,"file":"vuejs-storage.umd.min.js","sources":["../src/objpath.ts","../src/drivers.ts","../src/merge.ts","../src/install.ts","../src/index.ts","../src/vuexplugin.ts"],"sourcesContent":["export function parsePath(path: string): string[] {\n\treturn path\n\t\t.replace(/\\[([^[\\]]*)\\]/g, '.$1.')\n\t\t.split('.')\n\t\t.filter(t => t !== '')\n}\nexport function get(obj: object, path: string): any {\n\treturn parsePath(path).reduce((prev, cur) => prev && prev[cur], obj)\n}\nexport function set(obj: object, path: string, value: any): void {\n\tconst paths = parsePath(path)\n\tlet cur = obj\n\tfor (let i = 0; i < paths.length - 1; i++) {\n\t\tconst pname = paths[i]\n\t\tif (!cur.hasOwnProperty(pname)) cur[pname] = {}\n\t\tcur = cur[pname]\n\t}\n\tcur[paths[paths.length - 1]] = value\n}\nexport function copy(dest: object, source: object, path: string): void {\n\tset(dest, path, get(source, path))\n}\n","import { StorageDriver } from './interfaces'\nexport default class StroageDriverImpl implements StorageDriver {\n\tprivate storage\n\tconstructor(storage: Storage) {\n\t\tthis.storage = storage\n\t}\n\tset(key: string, value: any) {\n\t\tthis.storage.setItem(key, JSON.stringify(value))\n\t}\n\tget(key: string) {\n\t\treturn JSON.parse(this.storage.getItem(key))\n\t}\n\thas(key: string) {\n\t\treturn !!this.storage.getItem(key)\n\t}\n}\nexport const localStorage = new StroageDriverImpl(window.localStorage)\nexport const sessionStorage = new StroageDriverImpl(window.sessionStorage)\n","// a simple object merge function implementation\nexport const isobj = x => typeof x === 'object' && !Array.isArray(x) && x !== null\nconst merge = (target, source) => {\n\tfor (const key of Object.keys(source)) {\n\t\tif (isobj(source[key])) {\n\t\t\tif (!(key in target)) {\n\t\t\t\ttarget[key] = source[key]\n\t\t\t} else {\n\t\t\t\tmerge(target[key], source[key])\n\t\t\t}\n\t\t} else {\n\t\t\ttarget[key] = source[key]\n\t\t}\n\t}\n\treturn target\n}\nexport default merge\n","import {\n\tVue,\n\tVueConstructor,\n\tOption,\n\tStorageOptionWithFactory,\n\tStorageOption,\n} from './interfaces'\nimport { set, copy } from './objpath'\nimport { localStorage } from './drivers'\nimport defaultMerge from './merge'\n\nfunction applyPersistence(vm, option: Option) {\n\tconst {\n\t\tkeys,\n\t\tmerge = defaultMerge,\n\t\tnamespace: ns,\n\t\tdriver = localStorage,\n\t} = option\n\n\tlet originaldata = {}\n\tfor (const k of keys) {\n\t\tcopy(originaldata, vm, k)\n\t}\n\n\tlet data = null\n\tif (driver.has(ns)) {\n\t\tdata = driver.get(ns)\n\t} else {\n\t\tconst tmp = {}\n\t\tfor (const k of keys) {\n\t\t\tcopy(tmp, originaldata, k)\n\t\t}\n\t\tdata = tmp\n\t\tdriver.set(ns, data)\n\t}\n\tdata = merge(originaldata, data)\n\tfor (const k of keys) {\n\t\tcopy(vm, data, k)\n\t\tvm.$watch(k, {\n\t\t\thandler: (value) => {\n\t\t\t\tset(data, k, value)\n\t\t\t\tdriver.set(ns, data)\n\t\t\t},\n\t\t\tdeep: true,\n\t\t})\n\t}\n}\n\nexport function install(Vue: VueConstructor) {\n\tVue.mixin({\n\t\tcreated() {\n\t\t\tif ('storage' in this.$options) {\n\t\t\t\tlet option: StorageOptionWithFactory = this.$options.storage\n\t\t\t\tif (typeof option === 'function') {\n\t\t\t\t\toption = option.apply(this) as StorageOption\n\t\t\t\t}\n\t\t\t\tif (Array.isArray(option))\n\t\t\t\t\toption.forEach((opt) => applyPersistence(this, opt))\n\t\t\t\telse applyPersistence(this, option)\n\t\t\t}\n\t\t},\n\t})\n}\n","import { Vue, VueConstructor, VuexPlugin, StorageDriver } from './interfaces'\n\nimport { install } from './install'\nimport { createVuexPlugin } from './vuexplugin'\nimport * as drivers from './drivers'\n\nexport interface vjs {\n\t(): VuexPlugin<Object>\n\tinstall: (Vue: VueConstructor) => void\n\tdrivers: { localStorage: StorageDriver; sessionStorage: StorageDriver }\n}\nconst vuejsStorage = <vjs>function(option) {\n\treturn createVuexPlugin(option)\n}\nvuejsStorage.install = install\nvuejsStorage.drivers = drivers\n\nexport default vuejsStorage\n","import { Store, VuexPlugin, Option } from './interfaces'\nimport { copy } from './objpath'\nimport { localStorage } from './drivers'\nimport defaultMerge from './merge'\n\n/**\n * Create Vuex plugin\n */\nexport function createVuexPlugin(option: Option): VuexPlugin<object> {\n\tconst { keys, merge = defaultMerge, namespace: ns, driver = localStorage } = option\n\treturn (store: Store<object>) => {\n\t\tif (driver.has(ns)) {\n\t\t\tconst data = driver.get(ns)\n\t\t\tstore.replaceState(merge(store.state, data))\n\t\t} else {\n\t\t\tconst data = {}\n\t\t\tfor (const k of keys) {\n\t\t\t\tcopy(data, store.state, k)\n\t\t\t}\n\t\t\tdriver.set(ns, data)\n\t\t}\n\t\tstore.subscribe((mutation, state) => {\n\t\t\tconst data = {}\n\t\t\tfor (const k of keys) {\n\t\t\t\tcopy(data, state, k)\n\t\t\t}\n\t\t\tdriver.set(ns, data)\n\t\t})\n\t}\n}\n"],"names":["parsePath","path","replace","split","filter","t","set","obj","value","paths","cur","i","length","pname","hasOwnProperty","copy","dest","source","reduce","prev","get","storage","StroageDriverImpl","key","setItem","JSON","stringify","parse","this","getItem","localStorage","window","sessionStorage","merge","target","_a","Object","keys","_i","_typeof","x","Array","isArray","applyPersistence","vm","option","defaultMerge","ns","_b","driver","originaldata","keys_1","k","data","has","tmp","keys_2","_c","$watch","handler","deep","keys_3","_d","vuejsStorage","store","replaceState","state","subscribe","mutation","createVuexPlugin","install","Vue","mixin","created","$options","apply","forEach","opt","_this","drivers"],"mappings":"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"}
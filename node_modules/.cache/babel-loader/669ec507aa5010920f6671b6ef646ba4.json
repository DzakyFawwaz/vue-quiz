{"remainingRequest":"/Users/zak/MPA/fe-psikotest/node_modules/babel-loader/lib/index.js!/Users/zak/MPA/fe-psikotest/node_modules/vue-loader-v16/dist/templateLoader.js??ref--6!/Users/zak/MPA/fe-psikotest/node_modules/cache-loader/dist/cjs.js??ref--1-0!/Users/zak/MPA/fe-psikotest/node_modules/vue-loader-v16/dist/index.js??ref--1-1!/Users/zak/MPA/fe-psikotest/src/components/Test/TestCheckComponent.vue?vue&type=template&id=36beb6c4","dependencies":[{"path":"/Users/zak/MPA/fe-psikotest/src/components/Test/TestCheckComponent.vue","mtime":1650892234853},{"path":"/Users/zak/MPA/fe-psikotest/babel.config.js","mtime":1650892234636},{"path":"/Users/zak/MPA/fe-psikotest/node_modules/cache-loader/dist/cjs.js","mtime":1650892308992},{"path":"/Users/zak/MPA/fe-psikotest/node_modules/babel-loader/lib/index.js","mtime":1650892309243},{"path":"/Users/zak/MPA/fe-psikotest/node_modules/vue-loader-v16/dist/templateLoader.js","mtime":1650892309458},{"path":"/Users/zak/MPA/fe-psikotest/node_modules/cache-loader/dist/cjs.js","mtime":1650892308992},{"path":"/Users/zak/MPA/fe-psikotest/node_modules/vue-loader-v16/dist/index.js","mtime":1650892309234}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IHsgY3JlYXRlRWxlbWVudFZOb2RlIGFzIF9jcmVhdGVFbGVtZW50Vk5vZGUsIGNyZWF0ZVN0YXRpY1ZOb2RlIGFzIF9jcmVhdGVTdGF0aWNWTm9kZSwgb3BlbkJsb2NrIGFzIF9vcGVuQmxvY2ssIGNyZWF0ZUVsZW1lbnRCbG9jayBhcyBfY3JlYXRlRWxlbWVudEJsb2NrIH0gZnJvbSAidnVlIjsKdmFyIF9ob2lzdGVkXzEgPSB7CiAgaWQ6ICJTdGFydEtlY2VybWF0YW5QYWdlIiwKICBzdHlsZTogewogICAgImhlaWdodCI6ICIxMDB2aCIsCiAgICAib3ZlcmZsb3ciOiAiaGlkZGVuIgogIH0KfTsKCnZhciBfaG9pc3RlZF8yID0gLyojX19QVVJFX18qL19jcmVhdGVTdGF0aWNWTm9kZSgiPGRpdiBjbGFzcz1cImNvbnRhaW5lciBweS01XCI+PGRpdiBjbGFzcz1cInJvdyBweS01IHRleHQtY2VudGVyIGQtZmxleCBmbGV4LWNvbHVtbiBqdXN0aWZ5LWNvbnRlbnQtY2VudGVyIGFsaWduLWl0ZW1zLWNlbnRlclwiPjxmaWd1cmUgaWQ9XCJpbGx1c3RyYXRpb25TdGFydFwiIHN0eWxlPVwid2lkdGg6YXV0bztoZWlnaHQ6MjAwcHg7XCI+PGltZyBzcmM9XCJhc3NldC9pbWcvbG9nby1nYW4ucG5nXCIgYWx0PVwiXCIgc3R5bGU9XCJ3aWR0aDphdXRvO2hlaWdodDoyMDBweDtcIiBjbGFzcz1cImltZy1maXQtY292ZXJcIj48L2ZpZ3VyZT48YnI+PGgxIHN0eWxlPVwiZm9udC1zaXplOjYwcHg7Y29sb3I6IzhkMTkxYztcIj5IYXJhcCBUdW5nZ3U8L2gxPjxoMj5Lb2RlIFRlc3QgQW5kYSBTZWRhbmcgS2FtaSBQZXJpa3NhPC9oMj48YnI+PHNwYW4+UGVyc2lhcGthbiBkaXJpIGFuZGEgdW50dWsgbWVtdWxhaSB0ZXN0IGtlY2VybWF0YW48L3NwYW4+PC9kaXY+PC9kaXY+IiwgMSk7Cgp2YXIgX2hvaXN0ZWRfMyA9IFtfaG9pc3RlZF8yXTsKZXhwb3J0IGZ1bmN0aW9uIHJlbmRlcihfY3R4LCBfY2FjaGUsICRwcm9wcywgJHNldHVwLCAkZGF0YSwgJG9wdGlvbnMpIHsKICByZXR1cm4gX29wZW5CbG9jaygpLCBfY3JlYXRlRWxlbWVudEJsb2NrKCJzZWN0aW9uIiwgX2hvaXN0ZWRfMSwgX2hvaXN0ZWRfMyk7Cn0="},{"version":3,"mappings":";;AACWA,IAAE,EAAC;AAAsBC,OAAuC,EAAvC;AAAA;AAAA;AAAA;;;;;kBAChCC;;uBADFC,oBAoBU,SApBV,cAoBUC,UApBV","names":["id","style","_hoisted_2","_createElementBlock","_hoisted_3"],"sourceRoot":"","sources":["/Users/zak/MPA/fe-psikotest/src/components/Test/TestCheckComponent.vue"],"sourcesContent":["<template>\n  <section id=\"StartKecermatanPage\" style=\"height: 100vh; overflow: hidden\">\n    <div class=\"container py-5\">\n      <div\n        class=\"row py-5 text-center d-flex flex-column justify-content-center align-items-center\"\n      >\n        <figure id=\"illustrationStart\" style=\"width: auto; height: 200px\">\n          <img\n            src=\"asset/img/logo-gan.png\"\n            alt=\"\"\n            style=\"width: auto; height: 200px\"\n            class=\"img-fit-cover\"\n          />\n        </figure>\n        <br />\n        <h1 style=\"font-size: 60px; color: #8d191c\">Harap Tunggu</h1>\n        <h2>Kode Test Anda Sedang Kami Periksa</h2>\n        <br />\n        <span>Persiapkan diri anda untuk memulai test kecermatan</span>\n      </div>\n    </div>\n  </section>\n</template>\n\n<script>\nimport axios from \"axios\";\nimport { useCookies } from \"vue3-cookies\";\nimport jsonString from \"../../../index.json\";\n\nexport default {\n  created() {\n    this.checkCode();\n  },\n  setup() {\n    // this.code = $route.param.exam_code\n    const { cookies } = useCookies();\n    return {\n      cookies,\n    };\n  },\n  data() {\n    return {\n      listExam: \"\",\n      questions: \"\",\n      indexExam: 0,\n      indexQuestion: 0,\n    };\n  },\n  methods: {\n    async checkCode() {\n      let token = this.cookies.get(\"X-GAN-TOKEN\");\n      await axios\n        .get(\n          \"/list-question?test_code=\" +\n            this.$route.params.exam_code +\n            \"&access_code=\" +\n            this.$route.params.access_code,\n          {\n            headers: {\n              Authorization: \"Bearer \" + token,\n              // \"Access-Control-Allow-Origin\": \"*\",\n            },\n          }\n        )\n        .then((res) => {\n          console.log(res);\n          if (res.data.message == \"Access Code is wrong\") {\n            // console.log(\"access code is wrong\");\n            return this.$router.push({\n              name: \"TestNotFound\",\n              params: {\n                message: \"Akses Kode Anda Salah\",\n              },\n            });\n          } else if (res.data.message == \"psikotest not found\") {\n            // console.log(\"test code is wrong\");\n            return this.$router.push({\n              name: \"TestNotFound\",\n              params: {\n                message: \"Test Kode Anda Salah\",\n              },\n            });\n          } else if (res.data.message == \"access code has been taken.\") {\n            // console.log(\"test code is wrong\");\n            return this.$router.push({\n              name: \"TestNotFound\",\n              params: {\n                message: \"Akses Kode Sudah Pernah Dipakai\",\n              },\n            });\n          } else if (res.data.message == \"test is overdue.\") {\n            // console.log(\"test code is wrong\");\n            return this.$router.push({\n              name: \"TestNotFound\",\n              params: {\n                message: \"Test Yang Anda Akses Belum Aktif\",\n              },\n            });\n          } else if (res.status == 200) {\n            // console.log(res.data.success);\n            this.cookies.set(\"list-exam\", res.data.data.idExam);\n            if (res.data.data.latestExam) {\n              this.cookies.set(\"last-exam\", res.data.data.latestExam);\n            }\n            this.$router.push({\n              name: \"StartKecermatan\",\n              params: {\n                exam_code: this.$route.params.exam_code,\n              },\n            });\n          } else {\n            // console.log(\"gaada data\");\n            this.$router.push({\n              name: \"TestNotFound\",\n              params: { message: \"Test Tidak Ditemukan\" },\n            });\n          }\n        })\n        .catch((err) => {\n          if (err.message == \"Request failed with status code 500\") {\n            // console.log(res.data.success);\n            return this.$router.push({\n              name: \"TestNotFound\",\n              params: {\n                message: \"Mohon Maaf, Server Kami Sedang Dalam Perbaikan\",\n              },\n            });\n          }\n        });\n      // console.log(\"listExam: \");\n      // console.log(jsonString);\n    },\n  },\n};\n</script>\n"]}]}
{"remainingRequest":"/Users/zak/DEV/WORK/MPA/fe-psikotest/node_modules/vue-loader-v16/dist/index.js??ref--1-1!/Users/zak/DEV/WORK/MPA/fe-psikotest/src/components/Test/TestCheckComponent.vue?vue&type=style&index=0&id=36beb6c4&scoped=true&lang=css","dependencies":[{"path":"/Users/zak/DEV/WORK/MPA/fe-psikotest/src/components/Test/TestCheckComponent.vue","mtime":1654740220810},{"path":"/Users/zak/DEV/WORK/MPA/fe-psikotest/node_modules/css-loader/dist/cjs.js","mtime":1650892309156},{"path":"/Users/zak/DEV/WORK/MPA/fe-psikotest/node_modules/vue-loader-v16/dist/stylePostLoader.js","mtime":1650892309437},{"path":"/Users/zak/DEV/WORK/MPA/fe-psikotest/node_modules/postcss-loader/src/index.js","mtime":1650892309236},{"path":"/Users/zak/DEV/WORK/MPA/fe-psikotest/node_modules/cache-loader/dist/cjs.js","mtime":1650892308992},{"path":"/Users/zak/DEV/WORK/MPA/fe-psikotest/node_modules/vue-loader-v16/dist/index.js","mtime":1650892309234}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CiAgICAjaWxsdXN0cmF0aW9uU3RhcnQsCiAgICAjaW1hZ2VTdGFydCB7CiAgICAgICAgd2lkdGg6IGF1dG87CiAgICAgICAgaGVpZ2h0OiAyMDBweDsKICAgIH0KCiAgICAjdGl0bGVTdGFydCB7CiAgICAgICAgZm9udC1zaXplOiA2MHB4ICFpbXBvcnRhbnQ7CiAgICAgICAgY29sb3I6ICM4ZDE5MWM7CiAgICB9CgogICAgI1N0YXJ0S2VjZXJtYXRhblBhZ2UgewogICAgICAgIGRpc3BsYXk6IGZsZXg7CiAgICAgICAgYWxpZ24taXRlbXM6IGNlbnRlcjsKICAgIH0KCiAgICBAbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA2MDBweCkgewoKICAgICAgICAjaWxsdXN0cmF0aW9uU3RhcnQsCiAgICAgICAgI2ltYWdlU3RhcnQgewogICAgICAgICAgICB3aWR0aDogYXV0bzsKICAgICAgICAgICAgaGVpZ2h0OiAyMDBweDsKICAgICAgICAgICAgbWFyZ2luLWJvdHRvbTogMjBweDsKICAgICAgICB9CgogICAgICAgICN0aXRsZVN0YXJ0IHsKICAgICAgICAgICAgZm9udC1zaXplOiA1MHB4OwogICAgICAgIH0KCiAgICAgICAgI3N1YnRpdGxlU3RhcnQgewogICAgICAgICAgICBmb250LXNpemU6IDIwcHg7CiAgICAgICAgfQogICAgfQoKICAgIEBtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDQwMHB4KSB7CgogICAgICAgICNpbGx1c3RyYXRpb25TdGFydCwKICAgICAgICAjaW1hZ2VTdGFydCB7CiAgICAgICAgICAgIHdpZHRoOiBhdXRvOwogICAgICAgICAgICBoZWlnaHQ6IDEyMHB4OwogICAgICAgIH0KCiAgICAgICAgI3RpdGxlU3RhcnQgewogICAgICAgICAgICBmb250LXNpemU6IDQwcHggIWltcG9ydGFudDsKICAgICAgICB9CiAgICB9CgogICAgQG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogMTAwMHB4KSBhbmQgKG9yaWVudGF0aW9uOiBsYW5kc2NhcGUpIHsKCiAgICAgICAgI2lsbHVzdHJhdGlvblN0YXJ0LAogICAgICAgICNpbWFnZVN0YXJ0IHsKICAgICAgICAgICAgd2lkdGg6IGF1dG87CiAgICAgICAgICAgIGhlaWdodDogMTIwcHg7CiAgICAgICAgfQoKICAgICAgICAjdGl0bGVTdGFydCB7CiAgICAgICAgICAgIGZvbnQtc2l6ZTogNTBweCAhaW1wb3J0YW50OwogICAgICAgIH0KCiAgICAgICAgI3N1YnRpdGxlU3RhcnQgewogICAgICAgICAgICBmb250LXNpemU6IDMwcHg7CiAgICAgICAgfQogICAgfQo="},{"version":3,"sources":["/Users/zak/DEV/WORK/MPA/fe-psikotest/src/components/Test/TestCheckComponent.vue"],"names":[],"mappings":"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","file":"/Users/zak/DEV/WORK/MPA/fe-psikotest/src/components/Test/TestCheckComponent.vue","sourceRoot":"","sourcesContent":["<template>\n    <section id=\"StartKecermatanPage\" style=\"height: 100vh; overflow: hidden\">\n        <div class=\"container\">\n            <div class=\"row text-center d-flex flex-column justify-content-center align-items-center\">\n                <figure id=\"illustrationStart\">\n                    <img id=\"imageStart\" src=\"asset/img/logo-gan.png\" alt=\"\" class=\"img-fit-cover\" />\n                </figure>\n                <br />\n                <h1 id=\"titleStart\">Harap Tunggu</h1>\n                <h2 id=\"subTitleStart\">Kode Test Anda Sedang Kami Periksa</h2>\n                <br />\n                <span>Persiapkan diri anda untuk memulai test kecermatan</span>\n            </div>\n        </div>\n    </section>\n</template>\n\n<script>\n    import axios from \"axios\";\n    import {\n        useCookies\n    } from \"vue3-cookies\";\n    import jsonString from \"../../../index.json\";\n\n    export default {\n        created() {\n            this.checkCode();\n        },\n        setup() {\n            // this.code = $route.param.exam_code\n            const {\n                cookies\n            } = useCookies();\n            return {\n                cookies,\n            };\n        },\n        data() {\n            return {\n                listExam: \"\",\n                questions: \"\",\n                indexExam: 0,\n                indexQuestion: 0,\n            };\n        },\n        methods: {\n            async checkCode() {\n                let token = this.cookies.get(\"X-GAN-TOKEN\");\n                await axios\n                    .get(\n                        \"/banksoal/psikotest/get-psikotest-data?test_code=\" +\n                        this.$route.params.exam_code +\n                        \"&access_code=\" +\n                        this.$route.params.access_code, {\n                            headers: {\n                                Authorization: \"Bearer \" + token,\n                                // \"Access-Control-Allow-Origin\": \"*\",\n                            },\n                        }\n                    )\n                    .then((res) => {\n                        console.log(res);\n                        switch (res.data.message) {\n                            case \"Access Code is wrong\":\n                                return this.$router.push({\n                                    name: \"TestNotFound\",\n                                    params: {\n                                        message: \"Akses Kode Anda Salah\",\n                                    },\n                                });\n                            case \"psikotest not found\":\n                                return this.$router.push({\n                                    name: \"TestNotFound\",\n                                    params: {\n                                        message: \"Test Kode Anda Salah\",\n                                    },\n                                });\n                            case \"access code has been taken.\":\n                                return this.$router.push({\n                                    name: \"TestNotFound\",\n                                    params: {\n                                        message: \"Akses Kode Sudah Pernah Dipakai\",\n                                    },\n                                });\n                            case \"test is overdue.\":\n                                return this.$router.push({\n                                    name: \"TestNotFound\",\n                                    params: {\n                                        message: \"Test Yang Anda Akses Belum Aktif\",\n                                    },\n                                });\n                            default:\n                                if (res.status == 200) {\n                                    // console.log(res.data.success);\n                                    this.cookies.set(\"list-exam\", res.data.data.idExam);\n                                    if (res.data.data.latestExam) {\n                                        this.cookies.set(\"last-exam\", res.data.data.latestExam);\n                                    }\n                                    return this.$router.push({\n                                        name: \"StartKecermatan\",\n                                        params: {\n                                            exam_code: this.$route.params.exam_code,\n                                        },\n                                    });\n                                } else {\n                                    // console.log(\"gaada data\");\n                                    return this.$router.push({\n                                        name: \"TestNotFound\",\n                                        params: {\n                                            message: \"Test Tidak Ditemukan\"\n                                        },\n                                    });\n                                }\n                        }\n                    })\n                    .catch((err) => {\n                        switch (err.message) {\n                            case \"Request failed with status code 401\":\n                                return this.$router.push({\n                                    name: \"TestNotFound\",\n                                    params: {\n                                        message: \"401 - Akses Code atau Test Kode yang anda masukkan salah\",\n                                    },\n                                });\n                            case \"Request failed with status code 500\":\n                                return this.$router.push({\n                                    name: \"TestNotFound\",\n                                    params: {\n                                        message: \"500 - Mohon Maaf, Server Kami Sedang Dalam Perbaikan\",\n                                    },\n                                });\n                            default:\n                                break;\n                        }\n                    });\n            },\n        },\n    };\n</script>\n\n<style scoped>\n    #illustrationStart,\n    #imageStart {\n        width: auto;\n        height: 200px;\n    }\n\n    #titleStart {\n        font-size: 60px !important;\n        color: #8d191c;\n    }\n\n    #StartKecermatanPage {\n        display: flex;\n        align-items: center;\n    }\n\n    @media screen and (max-width: 600px) {\n\n        #illustrationStart,\n        #imageStart {\n            width: auto;\n            height: 200px;\n            margin-bottom: 20px;\n        }\n\n        #titleStart {\n            font-size: 50px;\n        }\n\n        #subtitleStart {\n            font-size: 20px;\n        }\n    }\n\n    @media screen and (max-width: 400px) {\n\n        #illustrationStart,\n        #imageStart {\n            width: auto;\n            height: 120px;\n        }\n\n        #titleStart {\n            font-size: 40px !important;\n        }\n    }\n\n    @media screen and (max-width: 1000px) and (orientation: landscape) {\n\n        #illustrationStart,\n        #imageStart {\n            width: auto;\n            height: 120px;\n        }\n\n        #titleStart {\n            font-size: 50px !important;\n        }\n\n        #subtitleStart {\n            font-size: 30px;\n        }\n    }\n</style>"]}]}